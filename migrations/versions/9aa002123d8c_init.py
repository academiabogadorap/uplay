"""init

Revision ID: 9aa002123d8c
Revises: 9f6da11507cf
Create Date: 2025-10-15 13:25:02.255306

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9aa002123d8c'
down_revision = '9f6da11507cf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('desafios', schema=None) as batch_op:
        batch_op.alter_column('rival1_acepto',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('rival2_acepto',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))

    with op.batch_alter_table('jugadores', schema=None) as batch_op:
        batch_op.alter_column('activo',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=False,
               existing_server_default=sa.text('1'))
        batch_op.alter_column('is_admin',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('pin',
               existing_type=sa.TEXT(),
               type_=sa.String(length=10),
               existing_nullable=False,
               existing_server_default=sa.text("'0000'"))
        batch_op.drop_index(batch_op.f('ux_jugadores_email'), sqlite_where=sa.text('email IS NOT NULL'))

    # Agregar FK con nombre explícito (SQLite requiere nombre en batch mode)
    with op.batch_alter_table('partido_abierto_jugadores', schema=None) as batch_op:
        batch_op.create_foreign_key(
            'fk_paj_partner_pref_jugador',
            'jugadores',
            ['partner_pref_id'],
            ['id']
        )

    with op.batch_alter_table('partido_resultado_propuesto', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_prp_creado_en'))

    with op.batch_alter_table('partidos', schema=None) as batch_op:
        batch_op.alter_column('rival1_acepto',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=True)
        batch_op.alter_column('rival2_acepto',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=True)
        batch_op.alter_column('resultado_propuesto_sets_text',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('ix_partidos_creador'))
        batch_op.drop_index(batch_op.f('ix_partidos_estado'))
        batch_op.drop_index(batch_op.f('ix_partidos_resultado_propuesto_en'))
        batch_op.drop_index(batch_op.f('ix_partidos_rival1'))
        batch_op.drop_index(batch_op.f('ix_partidos_rival2'))

        # Todas las FK con nombres explícitos
        batch_op.create_foreign_key(
            'fk_partidos_resultado_prop_por_jugador',
            'jugadores',
            ['resultado_propuesto_por_id'],
            ['id']
        )
        batch_op.create_foreign_key(
            'fk_partidos_rival1_jugador',
            'jugadores',
            ['rival1_id'],
            ['id']
        )
        batch_op.create_foreign_key(
            'fk_partidos_rival2_jugador',
            'jugadores',
            ['rival2_id'],
            ['id']
        )
        batch_op.create_foreign_key(
            'fk_partidos_creador_jugador',
            'jugadores',
            ['creador_id'],
            ['id']
        )
        batch_op.create_foreign_key(
            'fk_partidos_companero_jugador',
            'jugadores',
            ['companero_id'],
            ['id']
        )
        batch_op.create_foreign_key(
            'fk_partidos_rechazo_ultimo_por_jugador',
            'jugadores',
            ['rechazo_ultimo_por_id'],
            ['id']
        )

    with op.batch_alter_table('torneos', schema=None) as batch_op:
        batch_op.alter_column('formato',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.alter_column('tipo',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'AMERICANO'"))
        batch_op.alter_column('inscripcion_libre',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('1'))
        batch_op.alter_column('permite_playoff_desde',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'ZONAS'"))
        batch_op.alter_column('reglas_json',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.drop_column('limite_jugadores')
        batch_op.drop_column('limite_parejas')

    with op.batch_alter_table('torneos_inscripciones', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.create_unique_constraint('uq_torneo_pareja_key', ['torneo_id', 'pareja_key'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('torneos_inscripciones', schema=None) as batch_op:
        batch_op.drop_constraint('uq_torneo_pareja_key', type_='unique')
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)

    with op.batch_alter_table('torneos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('limite_parejas', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('limite_jugadores', sa.INTEGER(), nullable=True))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('reglas_json',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('permite_playoff_desde',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'ZONAS'"))
        batch_op.alter_column('inscripcion_libre',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('1'))
        batch_op.alter_column('tipo',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'AMERICANO'"))
        batch_op.alter_column('formato',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)

    with op.batch_alter_table('partidos', schema=None) as batch_op:
        # Dropear las FK con sus nombres explícitos (mismo orden inverso no es requerido pero es prolijo)
        batch_op.drop_constraint('fk_partidos_rechazo_ultimo_por_jugador', type_='foreignkey')
        batch_op.drop_constraint('fk_partidos_companero_jugador', type_='foreignkey')
        batch_op.drop_constraint('fk_partidos_creador_jugador', type_='foreignkey')
        batch_op.drop_constraint('fk_partidos_rival2_jugador', type_='foreignkey')
        batch_op.drop_constraint('fk_partidos_rival1_jugador', type_='foreignkey')
        batch_op.drop_constraint('fk_partidos_resultado_prop_por_jugador', type_='foreignkey')

        batch_op.create_index(batch_op.f('ix_partidos_rival2'), ['rival2_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_partidos_rival1'), ['rival1_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_partidos_resultado_propuesto_en'), ['resultado_propuesto_en'], unique=False)
        batch_op.create_index(batch_op.f('ix_partidos_estado'), ['estado'], unique=False)
        batch_op.create_index(batch_op.f('ix_partidos_creador'), ['creador_id'], unique=False)
        batch_op.alter_column('resultado_propuesto_sets_text',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('rival2_acepto',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('rival1_acepto',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('partido_resultado_propuesto', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_prp_creado_en'), ['creado_en'], unique=False)

    with op.batch_alter_table('partido_abierto_jugadores', schema=None) as batch_op:
        batch_op.drop_constraint('fk_paj_partner_pref_jugador', type_='foreignkey')

    with op.batch_alter_table('jugadores', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ux_jugadores_email'), ['email'], unique=1, sqlite_where=sa.text('email IS NOT NULL'))
        batch_op.alter_column('pin',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'0000'"))
        batch_op.alter_column('is_admin',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('activo',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text('1'))

    with op.batch_alter_table('desafios', schema=None) as batch_op:
        batch_op.alter_column('rival2_acepto',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('rival1_acepto',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))

    # ### end Alembic commands ###
